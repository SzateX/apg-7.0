//
// This C-language parser header was generated by APG Version 7.0.
// User modifications invalidate the license agreement and may cause unpredictable results.
//
/*  *************************************************************************************
    Copyright (c) 2021, Lowell D. Thomas
    All rights reserved.

    This file was generated by and is part of APG Version 7.0.
    APG Version 7.0 may be used under the terms of the BSD 2-Clause License.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:

    1. Redistributions of source code must retain the above copyright notice, this
       list of conditions and the following disclaimer.

    2. Redistributions in binary form must reproduce the above copyright notice,
       this list of conditions and the following disclaimer in the documentation
       and/or other materials provided with the distribution.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
    DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
    DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*   *************************************************************************************/

#ifndef _FLOAT_H_
#define _FLOAT_H_

// rule ids
#define FLOAT_DECIMAL 2
#define FLOAT_DOT 4
#define FLOAT_ESIGN 7
#define FLOAT_EXP 8
#define FLOAT_EXPONENT 6
#define FLOAT_FLOAT 0
#define FLOAT_FRACTION 5
#define FLOAT_INTEGER 3
#define FLOAT_SIGN 1
#define RULE_COUNT_FLOAT 9

// pointer to parser initialization data
extern void* vpFloatInit;

// Helper function(s) for setting rule/UDT name callbacks.
// Un-comment and replace named NULL with pointer to the appropriate callback function.
//  NOTE: This can easily be modified for setting AST callback functions:
//        Replace parser_callback with ast_callback and
//        vParserSetRuleCallback(vpParserCtx) with vAstSetRuleCallback(vpAstCtx) and
//        vParserSetUdtCallback(vpParserCtx) with vAstSetUdtCallback(vpAstCtx).
/****************************************************************
void vFloatRuleCallbacks(void* vpParserCtx){
    aint ui;
    parser_callback cb[RULE_COUNT_FLOAT];
    cb[FLOAT_DECIMAL] = NULL;
    cb[FLOAT_DOT] = NULL;
    cb[FLOAT_ESIGN] = NULL;
    cb[FLOAT_EXP] = NULL;
    cb[FLOAT_EXPONENT] = NULL;
    cb[FLOAT_FLOAT] = NULL;
    cb[FLOAT_FRACTION] = NULL;
    cb[FLOAT_INTEGER] = NULL;
    cb[FLOAT_SIGN] = NULL;
    for(ui = 0; ui < (aint)RULE_COUNT_FLOAT; ui++){
        vParserSetRuleCallback(vpParserCtx, ui, cb[ui]);
    }
}
****************************************************************/

#endif /* _FLOAT_H_ */
